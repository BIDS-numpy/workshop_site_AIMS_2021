<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Setting Up on AMMI Scientific Python Workshop</title>
    <link>https://bids-numpy.github.io/workshop_site_AIMS_2021/day_1/setting_up/</link>
    <description>Recent content in Setting Up on AMMI Scientific Python Workshop</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://bids-numpy.github.io/workshop_site_AIMS_2021/day_1/setting_up/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Getting the source code</title>
      <link>https://bids-numpy.github.io/workshop_site_AIMS_2021/day_1/setting_up/getting_the_source/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://bids-numpy.github.io/workshop_site_AIMS_2021/day_1/setting_up/getting_the_source/</guid>
      <description>The source code for scientific Python projects is managed with git. Most scientific Python projects have their main repository available online on GitHub; for example:
NumPy: https://github.com/numpy/numpy SciPy: https://github.com/scipy/scipy NetworkX: https://github.com/networkx/networkx scikit-image: https://github.com/scikit-image/scikit-image scikit-learn: https://github.com/scikit-learn/scikit-learn Step 1: Fork the main repository Start by forking the repository. This creates a copy of the remote repository under your own GitHub account that you can both pull from and push to.
Not sure if you&amp;rsquo;ve already forked a repo?</description>
    </item>
    
    <item>
      <title>Development Environment</title>
      <link>https://bids-numpy.github.io/workshop_site_AIMS_2021/day_1/setting_up/dev_env_setup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://bids-numpy.github.io/workshop_site_AIMS_2021/day_1/setting_up/dev_env_setup/</guid>
      <description>Now that we have the source code, we need to set up a development environment in order to be able to do things like:
build the project run the test suite / evaluate changes locally build the documentation for the project Step 1: Installing dependencies Most projects depend on other software. Installing and managing these dependencies can be a daunting task until you&amp;rsquo;re used to it. Fortunately, there are some straight-forward best-practices to help guide the process.</description>
    </item>
    
  </channel>
</rss>
